{"dependencies":[{"name":"react"},{"name":"prop-types"},{"name":"chart.js"},{"name":"lodash/isEqual"},{"name":"lodash/find"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.Chart = exports.defaults = exports.Scatter = exports.Bubble = exports.Polar = exports.Radar = exports.HorizontalBar = exports.Bar = exports.Line = exports.Pie = exports.Doughnut = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _chart = require(\"chart.js\");\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nvar _isEqual = require(\"lodash/isEqual\");\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nvar _find = require(\"lodash/find\");\n\nvar _find2 = _interopRequireDefault(_find);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chart_instance;\n\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chart_instance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chart_instance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!(0, _isEqual2.default)(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!(0, _isEqual2.default)(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!(0, _isEqual2.default)(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !(0, _isEqual2.default)(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chart_instance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  };\n\n  // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n\n    return data;\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n\n    var data = this.memoizeDataProps(this.props);\n\n    if (!this.chart_instance) return;\n\n    if (options) {\n      this.chart_instance.options = _chart2.default.helpers.configMerge(this.chart_instance.options, options);\n    }\n\n    // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n    var currentDatasets = this.chart_instance.config.data && this.chart_instance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n\n    // use the key provider to work out which series have been added/removed/changed\n    var currentDatasetKeys = currentDatasets.map(this.props.datasetKeyProvider);\n    var nextDatasetKeys = nextDatasets.map(this.props.datasetKeyProvider);\n    var newDatasets = nextDatasets.filter(function (d) {\n      return currentDatasetKeys.indexOf(_this2.props.datasetKeyProvider(d)) === -1;\n    });\n\n    // process the updates (via a reverse for loop so we can safely splice deleted datasets out of the array\n\n    var _loop = function _loop(idx) {\n      var currentDatasetKey = _this2.props.datasetKeyProvider(currentDatasets[idx]);\n      if (nextDatasetKeys.indexOf(currentDatasetKey) === -1) {\n        // deleted series\n        currentDatasets.splice(idx, 1);\n      } else {\n        var retainedDataset = (0, _find2.default)(nextDatasets, function (d) {\n          return _this2.props.datasetKeyProvider(d) === currentDatasetKey;\n        });\n        if (retainedDataset) {\n          // update it in place if it is a retained dataset\n          currentDatasets[idx].data.splice(retainedDataset.data.length);\n          retainedDataset.data.forEach(function (point, pid) {\n            currentDatasets[idx].data[pid] = retainedDataset.data[pid];\n          });\n\n          var _data = retainedDataset.data,\n              otherProps = _objectWithoutProperties(retainedDataset, ['data']);\n\n          currentDatasets[idx] = _extends({\n            data: currentDatasets[idx].data\n          }, currentDatasets[idx], otherProps);\n        }\n      }\n    };\n\n    for (var idx = currentDatasets.length - 1; idx >= 0; idx -= 1) {\n      _loop(idx);\n    }\n    // finally add any new series\n    newDatasets.forEach(function (d) {\n      return currentDatasets.push(d);\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chart_instance.config.data = _extends({}, this.chart_instance.config.data, rest);\n\n    this.chart_instance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !(0, _isEqual2.default)(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chart_instance = new _chart2.default(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick;\n\n    return _react2.default.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(_react2.default.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]).isRequired,\n  getDatasetAtEvent: _propTypes2.default.func,\n  getElementAtEvent: _propTypes2.default.func,\n  getElementsAtEvent: _propTypes2.default.func,\n  height: _propTypes2.default.number,\n  legend: _propTypes2.default.object,\n  onElementsClick: _propTypes2.default.func,\n  options: _propTypes2.default.object,\n  plugins: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  redraw: _propTypes2.default.bool,\n  type: function type(props, propName, componentName) {\n    if (!_chart2.default.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: _propTypes2.default.number,\n  datasetKeyProvider: _propTypes2.default.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\n\nexports.default = ChartComponent;\nvar Doughnut = exports.Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chart_instance = _ref && _ref.chart_instance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(_react2.default.Component);\n\nvar Pie = exports.Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chart_instance = _ref2 && _ref2.chart_instance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(_react2.default.Component);\n\nvar Line = exports.Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chart_instance = _ref3 && _ref3.chart_instance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(_react2.default.Component);\n\nvar Bar = exports.Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chart_instance = _ref4 && _ref4.chart_instance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(_react2.default.Component);\n\nvar HorizontalBar = exports.HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chart_instance = _ref5 && _ref5.chart_instance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(_react2.default.Component);\n\nvar Radar = exports.Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chart_instance = _ref6 && _ref6.chart_instance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(_react2.default.Component);\n\nvar Polar = exports.Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chart_instance = _ref7 && _ref7.chart_instance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(_react2.default.Component);\n\nvar Bubble = exports.Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chart_instance = _ref8 && _ref8.chart_instance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(_react2.default.Component);\n\nvar Scatter = exports.Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return _react2.default.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chart_instance = _ref9 && _ref9.chart_instance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(_react2.default.Component);\n\nvar defaults = exports.defaults = _chart2.default.defaults;\nexports.Chart = _chart2.default;"},"hash":"e8272709e11c7197e96bf8847be20655"}