{"dependencies":[{"name":"../utils/abs-floor","loc":{"line":1,"column":21}},{"name":"../units/offset","loc":{"line":2,"column":32}},{"name":"../units/aliases","loc":{"line":3,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diff = diff;\n\nvar _absFloor = require(\"../utils/abs-floor\");\n\nvar _absFloor2 = _interopRequireDefault(_absFloor);\n\nvar _offset = require(\"../units/offset\");\n\nvar _aliases = require(\"../units/aliases\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction diff(input, units, asFloat) {\n  var that, zoneDelta, delta, output;\n\n  if (!this.isValid()) {\n    return NaN;\n  }\n\n  that = (0, _offset.cloneWithOffset)(input, this);\n\n  if (!that.isValid()) {\n    return NaN;\n  }\n\n  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n  units = (0, _aliases.normalizeUnits)(units);\n\n  if (units === 'year' || units === 'month' || units === 'quarter') {\n    output = monthDiff(this, that);\n    if (units === 'quarter') {\n      output = output / 3;\n    } else if (units === 'year') {\n      output = output / 12;\n    }\n  } else {\n    delta = this - that;\n    output = units === 'second' ? delta / 1e3 : // 1000\n    units === 'minute' ? delta / 6e4 : // 1000 * 60\n    units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n    units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n    units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n    delta;\n  }\n  return asFloat ? output : (0, _absFloor2.default)(output);\n}\n\nfunction monthDiff(a, b) {\n  // difference in months\n  var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n\n  // b is in (anchor - 1 month, anchor + 1 month)\n  anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust;\n\n  if (b - anchor < 0) {\n    anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n    // linear across the month\n    adjust = (b - anchor) / (anchor - anchor2);\n  } else {\n    anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n    // linear across the month\n    adjust = (b - anchor) / (anchor2 - anchor);\n  }\n\n  //check for negative zero, return zero if negative zero\n  return -(wholeMonthDiff + adjust) || 0;\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(diff, \"diff\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/diff.js\");\n\n  __REACT_HOT_LOADER__.register(monthDiff, \"monthDiff\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/diff.js\");\n}();\n\n;"},"hash":"6fe373ec01d5eed8ac8d86e9a44c3b66"}