{"dependencies":[{"name":"./constructor","loc":{"line":1,"column":25}},{"name":"../units/aliases","loc":{"line":2,"column":31}},{"name":"../create/local","loc":{"line":3,"column":28}},{"name":"../utils/is-undefined","loc":{"line":4,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAfter = isAfter;\nexports.isBefore = isBefore;\nexports.isBetween = isBetween;\nexports.isSame = isSame;\nexports.isSameOrAfter = isSameOrAfter;\nexports.isSameOrBefore = isSameOrBefore;\n\nvar _constructor = require(\"./constructor\");\n\nvar _aliases = require(\"../units/aliases\");\n\nvar _local = require(\"../create/local\");\n\nvar _isUndefined = require(\"../utils/is-undefined\");\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAfter(input, units) {\n  var localInput = (0, _constructor.isMoment)(input) ? input : (0, _local.createLocal)(input);\n  if (!(this.isValid() && localInput.isValid())) {\n    return false;\n  }\n  units = (0, _aliases.normalizeUnits)(!(0, _isUndefined2.default)(units) ? units : 'millisecond');\n  if (units === 'millisecond') {\n    return this.valueOf() > localInput.valueOf();\n  } else {\n    return localInput.valueOf() < this.clone().startOf(units).valueOf();\n  }\n}\n\nfunction isBefore(input, units) {\n  var localInput = (0, _constructor.isMoment)(input) ? input : (0, _local.createLocal)(input);\n  if (!(this.isValid() && localInput.isValid())) {\n    return false;\n  }\n  units = (0, _aliases.normalizeUnits)(!(0, _isUndefined2.default)(units) ? units : 'millisecond');\n  if (units === 'millisecond') {\n    return this.valueOf() < localInput.valueOf();\n  } else {\n    return this.clone().endOf(units).valueOf() < localInput.valueOf();\n  }\n}\n\nfunction isBetween(from, to, units, inclusivity) {\n  inclusivity = inclusivity || '()';\n  return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame(input, units) {\n  var localInput = (0, _constructor.isMoment)(input) ? input : (0, _local.createLocal)(input),\n      inputMs;\n  if (!(this.isValid() && localInput.isValid())) {\n    return false;\n  }\n  units = (0, _aliases.normalizeUnits)(units || 'millisecond');\n  if (units === 'millisecond') {\n    return this.valueOf() === localInput.valueOf();\n  } else {\n    inputMs = localInput.valueOf();\n    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n  }\n}\n\nfunction isSameOrAfter(input, units) {\n  return this.isSame(input, units) || this.isAfter(input, units);\n}\n\nfunction isSameOrBefore(input, units) {\n  return this.isSame(input, units) || this.isBefore(input, units);\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(isAfter, \"isAfter\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n\n  __REACT_HOT_LOADER__.register(isBefore, \"isBefore\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n\n  __REACT_HOT_LOADER__.register(isBetween, \"isBetween\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n\n  __REACT_HOT_LOADER__.register(isSame, \"isSame\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n\n  __REACT_HOT_LOADER__.register(isSameOrAfter, \"isSameOrAfter\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n\n  __REACT_HOT_LOADER__.register(isSameOrBefore, \"isSameOrBefore\", \"/Users/dan/code/kickstart/node_modules/moment/src/lib/moment/compare.js\");\n}();\n\n;"},"hash":"50795f6c1c50452260944486e8187a0d"}