{"dependencies":[{"name":"../format/format","loc":{"line":1,"column":29}},{"name":"../utils/hooks","loc":{"line":2,"column":22}},{"name":"../utils/is-function","loc":{"line":3,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toString = toString;\nexports.toISOString = toISOString;\nexports.inspect = inspect;\nexports.format = format;\n\nvar _format = require(\"../format/format\");\n\nvar _hooks = require(\"../utils/hooks\");\n\nvar _isFunction = require(\"../utils/is-function\");\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_hooks.hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n_hooks.hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString() {\n  return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n  if (!this.isValid()) {\n    return null;\n  }\n  var m = this.clone().utc();\n  if (m.year() < 0 || m.year() > 9999) {\n    return (0, _format.formatMoment)(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n  }\n  if ((0, _isFunction2.default)(Date.prototype.toISOString)) {\n    // native implementation is ~50x faster, use it when we can\n    return this.toDate().toISOString();\n  }\n  return (0, _format.formatMoment)(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect() {\n  if (!this.isValid()) {\n    return 'moment.invalid(/* ' + this._i + ' */)';\n  }\n  var func = 'moment';\n  var zone = '';\n  if (!this.isLocal()) {\n    func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n    zone = 'Z';\n  }\n  var prefix = '[' + func + '(\"]';\n  var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n  var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n  var suffix = zone + '[\")]';\n\n  return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format(inputString) {\n  if (!inputString) {\n    inputString = this.isUtc() ? _hooks.hooks.defaultFormatUtc : _hooks.hooks.defaultFormat;\n  }\n  var output = (0, _format.formatMoment)(this, inputString);\n  return this.localeData().postformat(output);\n}"},"hash":"9ddc00f4112c50744123b00f919ae731"}